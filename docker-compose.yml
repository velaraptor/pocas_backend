version: '3.6'
services:
  mongo_db:
    container_name: pocas_mongo
    image: mongo
    volumes:
      - mongo_db:/data/db
    restart: always
    networks:
      - pocas_net
    env_file:
      - local.env
    ports:
      - "27017:27017"

  admin:
    container_name: pocas_admin
    depends_on:
      - mongo_db
    build:
      context: ./
      dockerfile: dfiles/DockerFile_ADMIN
    networks:
      - pocas_net
    env_file:
      - local.env
      - keys.env
      - api.env
      - .env

  api:
    container_name: pocas_api
    depends_on:
      - mongo_db
      - redis
    build:
      context: ./
      dockerfile: dfiles/Dockerfile_API
    volumes:
      - ./data:/data
    networks:
      - pocas_net
    env_file:
      - local.env
      - keys.env
      - api.env

  frontend:
    container_name: frontend
    restart: always
    depends_on:
      - postgres
      - mongo_db
      - api
    environment:
      - WORKERS_PER_CORE=0.5
    build:
      context: ./
      dockerfile: dfiles/DockerFile_UI
    networks:
      - pocas_net
    volumes:
      - ./migrations:/app/migrations
    env_file:
      - .env
      - keys.env
      - api.env
      - local.env

  redis:
    container_name: pocas_redis
    image: redis
    restart: always
    volumes:
      - cache:/data
    networks:
      - pocas_net

  postgres:
    container_name: postgresdb
    image: postgres:14.1
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - pocas_net
    volumes:
      - postgres_db:/var/lib/postgresql/data

  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx-conf-dev:/etc/nginx/conf.d
    depends_on:
      - frontend
      - api
    networks:
      - pocas_net
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

volumes:
  cache:
  mongo_db:
  postgres_db:

networks:
  pocas_net:
    name: pocas_net
    driver: bridge